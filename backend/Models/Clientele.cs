// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using backend.Models.Clientele;
//
//    var clientele = Clientele.FromJson(jsonString);

namespace backend.Models.Clientele
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using J = Newtonsoft.Json.JsonPropertyAttribute;

    public partial class Clientele
    {
        [J("Clienteleid")]     public long Clienteleid { get; set; }    
        [J("ClienteleName")]   public string ClienteleName { get; set; }
        [J("RetentionLength")] public long RetentionLength { get; set; }
        [J("SlaDueDate")]      public long SlaDueDate { get; set; }     
        [J("ParentId")]        public long? ParentId { get; set; }      
    }

    public partial class Clientele
    {
        public static Clientele FromJson(string json) => JsonConvert.DeserializeObject<Clientele>(json, backend.Models.Clientele.Converter.Settings);
    
        public static List<Clientele> FromJsonList(string json) => JsonConvert.DeserializeObject<List<Clientele>>(json, backend.Models.Clientele.Converter.Settings);
    
    }

    public static class Serialize
    {
        public static string ToJson(this Clientele self) => JsonConvert.SerializeObject(self, backend.Models.Clientele.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
