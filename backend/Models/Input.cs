// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using backend.Models.Input;
//
//    var input = Input.FromJson(jsonString);

namespace backend.Models.Input
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using J = Newtonsoft.Json.JsonPropertyAttribute;

    public partial class Input
    {
        # nullable enable
        [J("Inputid")]                                              public long? Inputid { get; set; }          
        [J("Filename")]                                             public string? Filename { get; set; }       
        [J("Jobid")]                                                public long? Jobid { get; set; }          
        [J("StoragePriority")]                                      public string? StoragePriority { get; set; }
        [J("InputUri")]                                             public string? InputUri { get; set; }       
        #nullable disable  
    }

       public partial class Input
    {
        public static Input FromJson(string json) => JsonConvert.DeserializeObject<Input>(json, backend.Models.Input.Converter.Settings);
        public static List<Input> FromJsonList(string json) => JsonConvert.DeserializeObject<List<Input>>(json, backend.Models.Input.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Input self) => JsonConvert.SerializeObject(self, backend.Models.Input.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
