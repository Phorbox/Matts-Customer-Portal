# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  push:
    branches: ["main"]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerfile: [./backend/Dockerfile]
        image: [portal-demo-front, portal-demo-api]
        tags:
          - latest
          - ${{ github.sha }}

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@master
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.image }}:${{ matrix.tags }}

  # deploy_to_server:
  # name: Deploy to server
  # runs-on: ubuntu-latest
  # needs: push_to_registry
  # steps:
  #   - name: Docker-Compose Remote Deployment
  #     uses: alex-ac/github-action-ssh-docker-compose@master
  #     with:
  #       ssh_host: ${{ secrets.SSH_HOST }}
  #       ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
  #       ssh_user: ${{ secrets.SSH_USER }}
  #       docker_compose_prefix: matts_com
  #       docker_compose_down: "true"

  bash-script:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
      - name: Deployment with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: sudo bash deploy.sh
